#ALIAS {dismap}
{
	#LINE verbose #UNVAR editmap;
	#LINE verbose #MAP flag static on;
}
{5}

#ALIAS {enmap}
{
	#LINE verbose #VAR editmap true;
	#LINE verbose #MAP flag static off;
}
{5}

#ALIAS {rname}
{
	#MAP set roomnote
}
{5}

#ALIAS {savemap}
{
    #IF {"$editmap" == "true"}
    {
        #MAP flag static on;
    };
	#LINE verbose {#MAP at 1 #MAP write modules/map/legendmud.map};
    #IF {"$editmap" == "true"}
    {
        #MAP flag static off;
    };
}
{5}

#ALIAS {search %*}
{
    #MAP list {roomname} {%i{.*%1.*}} {variable} {search_list};
    #FORMAT search_msg {Found <169>%d<099> rooms matching <169>%s<099>:} {&search_list[]} {%1};
    #SHOWME $search_msg;
    #SHOWME;
    #FORMAT search_msg {<199>%+6s   Room Name / Area Name<099>} {Vnum};
    #SHOWME $search_msg;
    #IF {&search_list[]}
    {
        #LOOP 1 &search_list[] cnt
        {
            #MAP at {*search_list[+$cnt]} {#MAP get {roomname} {roomname}};
            #MAP at {*search_list[+$cnt]} {#MAP get {roomvnum} {roomvnum}};
            #MAP at {*search_list[+$cnt]} {#MAP get {roomarea} {roomarea}};
            #FORMAT roomvnum {%+6s} {$roomvnum};
            #FORMAT roomarea {%p} {$roomarea};
            #SHOWME $roomvnum - $roomname (<169>$roomarea<099>);
        }
    };
    #SHOWME;
    #UNVAR search_list;
    #UNVAR search_msg;
    #UNVAR roomname;
    #UNVAR roomvnum;
    #UNVAR roomarea;
    #UNVAR cnt;
}
{5}

#ALIAS {^find$}
{
    #MAP list {roomname} {$gmcp[room][name]} {roomdesc} {$gmcp[room][desc]} {roomarea} {$gmcp[room][area]} {variable} {findroom_results};
    #IF {&findroom_results[] > 0}
    {
        #MAP goto *findroom_results[+1];
    }
    {
        #MAP list {roomname} {$gmcp[room][name]} {roomarea} {$gmcp[room][area]} {variable} {findroom_results};
        #IF {&findroom_results[] > 0}
        {
            #SHOWME <001>Could not match room description. "$gmcp[room][desc]";
            #SHOWME <001>Using first room in area with name: $gmcp[room][name].;
            #MAP goto *findroom_results[+1];
        }
        {
            #SHOWME Could not match room in area with name: $gmcp[room][name].;
        };
    };

    #LIST map_queue clear;
}
{5}

#ALIAS {nicknames}
{
    #MAP list {roomnote} {{.+}} {variable} {nickname_list};
    #LOOP 1 &nickname_list[] cnt
    {
        #MAP at {*nickname_list[+$cnt]} {#MAP get {roomname} {roomname}};
        #MAP at {*nickname_list[+$cnt]} {#MAP get {roomnote} {roomnote}};
        #FORMAT roomnote {%-10s} {$roomnote};
        #SHOWME $roomnote - $roomname;
    };
    #UNVAR nickname_list;
    #UNVAR roomname;
    #UNVAR roomnote;
    #UNVAR cnt;
}
{5}

#ALIAS {run %1}
{
    #REGEX {%1} {^%d$}
    {
        #MAP find %1;
    }
    {
        #MAP find {} {roomnote} {%1};
    };
    #PATH run;
}

#ALIAS {walk %1}
{
    #REGEX {%1} {^%d$}
    {
        #MAP find %1;
    }
    {
        #MAP find {} {roomnote} {%1};
    };
	#PATH run 0.05;
}
{5}

#ALIAS {slowwalk %1}
{
    #REGEX {%1} {^%d$}
    {
        #MAP find %1;
    }
    {
        #MAP find {} {roomnote} {%1};
    };
    #TICK {slowwalk} {#PATH walk f} {0.25};
}
{5}

#EVENT {END OF PATH}
{
    #UNTICK slowwalk;
}

#ALIAS {stop}
{
    #UNTICK slowwalk;
    #PATH destroy;
    #SEND clear;
}
{5}

#ALIAS {door %1}
{
    #MAP exit %1 command {open %1;%1};
}
{5}

#ALIAS {checkexits}
{
    #VAR checkexits {{n}{1}{e}{2}{s}{3}{w}{4}{u}{5}{d}{6}};
    #MAP get roomexits roomexits;
    #FOREACH {*roomexits[]} {exit}
    {
        #UNVAR checkexits[$exit];
    };

    #FOREACH {*checkexits[]} {exit}
    {
        #SHOWME Checking $exit;
        #SEND open $exit;
    };

    #UNVAR exit;
    #UNVAR roomexits;
    #UNVAR checkexits;
}
{5}

#ALIAS {sac bunny}
{
    #SEND enq sac bunny;
    #SEND pause 1s;
    #SEND sit circle;
    #SEND enq ponder self;
    #SEND st;
}
