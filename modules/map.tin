#IF {&{is_startup}}
{
    #VAR phelp_list[map][enmap] {Enables map editing.};
    #VAR phelp_list[map][dismap] {Disabled map editing.};
    #VAR phelp_list[map][rname] {Changes the nickname for a room.};
    #VAR phelp_list[map][savemap] {Saves the map to file.};
    #VAR phelp_list[map][search] {Searches for rooms in the map with the specified text in the room name.};
    #VAR phelp_list[map][find] {Finds a room based on your current room in the MUD and teleports you to it.};
    #VAR phelp_list[map][nicknames] {Lists all of the rooms that have nicknames};
    #VAR phelp_list[map][run] {Finds a room based on the specified nickname and walks to it if a path is found. Map moves to final room immediately.};
    #VAR phelp_list[map][walk] {Finds a room based on the specified nickname and walks to it if a path is found. Map moves to final room fairly quickly.};
    #VAR phelp_list[map][slowwalk] {Finds a room based on the specified nickname and walks to it if a path is found. Map moves to final room slowly.};
    #VAR phelp_list[map][stop] {Stops a walk or slowwalk.};
    #VAR phelp_list[map][door] {Adds a door to the specified exit.};
    #VAR phelp_list[map][sac bunny] {Convenient command to take you through the bunny trans steps after killing the bunny.};
};

#EVENT {IAC SB GMCP room.info IAC SE}
{
    #VAR gmcp[room] {%0};

    #REPLACE {gmcp[room][desc]} {\\r} {};
    #LOCAL edit_map_desc {$gmcp[room][desc]};
    #REPLACE gmcp[room][desc] {\\n} {\\n};
    #REPLACE gmcp[room][desc] {;} {\\;};

    #IF {"$editmap" == "true"}
    {
        #MAP set {roomname} {$gmcp[room][name]};
        #MAP set {roomdesc} {$edit_map_desc};
        #MAP set {roomarea} {$gmcp[room][area]};
    }
    {
        #MAP get roomname tmp[room_check];
        #IF {&{map_queue[]} > 0}
        {
            #IF {"$gmcp[room][name]" == "It is too dark to see..." || "$map_queue[1]" == "$gmcp[room][name]"}
            {
                #LIST map_queue delete 1;
            }
            {
                find;
            };
        }
        {
            find;
        };
        #UNVAR tmp;
    }
}

#EVENT {MAP ENTER ROOM}
{
    #IF {"$editmap" != "true"}
    {
        #MAP get roomname tmp[check_room];
        #IF {&{map_queue[]} >= 0 || "$tmp[check_room]" != "$gmcp[room][name]"}
        {
            #LIST map_queue add $tmp[check_room];
        }
    }
};

#EVENT {MAP UPDATED VTMAP}
{
    #IF {"${map_external}" == "true"}
    {
        #MAP map ${map_external_lines} ${map_external_rows} overwrite modules/map/map.txt;
    };

    #IF {&{screen[panes][$pane_map]}}
    {
        #NOP draw box;
        #DRAW box $screen[boxes][$pane_map][y1] $screen[boxes][$pane_map][x1] $screen[boxes][$pane_map][y2] $screen[boxes][$pane_map][x2];

        #LOCAL label_offset {};
        #LOCAL label_end {};
        #MATH label_offset {$screen[boxes][$pane_map][x1] + 2};
        #MATH label_end {$screen[boxes][$pane_map][x1] + 6};
        #DRAW tile $screen[boxes][$pane_map][y1] $label_offset $screen[boxes][$pane_map][y1] $label_end { MAP };

        #NOP draw room info;
        #MAP get all room_vars;

        #MATH map_info_line {$screen[panes][$pane_map][y2] - 3};

        #FORMAT map_info_text {%s} {  <039>$room_vars[area]<099>};
        #DRAW tile $map_info_line $screen[panes][$pane_map][x1] $map_info_line $screen[panes][$pane_map][x2] {$map_info_text};

        #MATH map_info_line {$map_info_line + 1};
        #FORMAT map_info_text {%s} {  <169>[<fca>$room_vars[vnum]<169>] <129>$room_vars[name]<099>};
        #IF {"$room_vars[note]" != ""}
        {
            #FORMAT map_info_text {%s %s} {$map_info_text} {<169>(<fca>$room_vars[note]<169>)<099>};
        };
        #DRAW tile $map_info_line $screen[panes][$pane_map][x1] $map_info_line $screen[panes][$pane_map][x2] {$map_info_text};

        #MATH map_info_line {$map_info_line + 1};
        #LOCAL map_info_text {  [Exits:};
        #LOCAL count {0};
        #FOREACH *room_vars[exits][%*] {exit}
        {
            #IF {{$count} == {0}}
            {
                #FORMAT map_info_text {%s <499>%s<099>} {$map_info_text} {$exit};
            }
            {
                #FORMAT map_info_text {%s, <499>%s<099>} {$map_info_text} {$exit};
            };
            #MATH count {$count + 1};
        };
        #FORMAT map_info_text {%s]} {$map_info_text};
        #DRAW tile $map_info_line $screen[panes][$pane_map][x1] $map_info_line $screen[panes][$pane_map][x2] {$map_info_text};

        #MATH map_info_line {$map_info_line + 1};
        #DRAW tile $map_info_line $screen[panes][$pane_map][x1] $map_info_line $screen[panes][$pane_map][x2] {};

        #UNVAR map_info_line;
        #UNVAR map_info_text;
        #UNVAR room_vars;
    };
}

#EVENT {MAP DOUBLE-CLICKED MOUSE BUTTON ONE}
{
    #MAP find %0;
    #PATH run 0.05;
}

#EVENT {MAP SHORT-CLICKED MOUSE BUTTON ONE}
{
    #LOCAL note {};
    #MAP at %0 {#MAP get all room_vars};
    #IF {"$room_vars[note]" != ""}
    {
        #VAR note {<169>(<fca>$room_vars[note]<169>)<099>};
    };
    #SHOWME {\n<039>$room_vars[area]};
    #SHOWME {<169>[<fca>%0<169>] <129>$room_vars[name] $note\n};
    #UNVAR room_vars;
}

#EVENT {MAP LONG-CLICKED MOUSE BUTTON ONE}
{
    #LOCAL note {};
    #MAP at %0 {#MAP get all room_vars};
    #IF {"$room_vars[note]" != ""}
    {
        #VAR note {<169>(<fca>$room_vars[note]<169>)<099>};
    };
    #SHOWME {\n<039>$room_vars[area]};
    #SHOWME {<169>[<fca>%0<169>] <129>$room_vars[name] $note};
    #SHOWME {<179>$room_vars[desc]\n};
    #UNVAR room_vars;
}

#FUNCTION {on_map_resize}
{
    #MAP offset $screen[panes][$pane_map][y1] $screen[panes][$pane_map][x1] $screen[panes][$pane_map][y2] $screen[panes][$pane_map][x2];

    #RETURN #NOP;
}

#MAP read modules/map/legendmud.map;
#MAP return;

#READ modules/map/action.tin;
#READ modules/map/alias.tin;

#IF {&{map_graphics}}
{
    #MAP FLAG $map_graphics ON;
    #UNVAR map_graphics;
}

#IF {&{terrain}}
{
    #MAP FLAG TERRAIN $terrain;
    #UNVAR terrain;
}

#IF {&{screen[panes][$pane_map]}}
{
    #MAP FLAG vtmap ON;
}
{
    #MAP FLAG vtmap OFF;
}

@on_map_resize{};
